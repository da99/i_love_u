// Generated by CoffeeScript 1.3.3
(function() {
  var Var, rw, _,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  rw = require("rw_ize");

  _ = require("underscore");

  Var = (function() {

    rw.ize(Var);

    Var.read_able("notifys_list", "name", "value");

    Var.read_write_able("is_import_able", "has_regexp_name", "belongs_to");

    function Var(name, val) {
      this.is_named = __bind(this.is_named, this);
      this.rw("name", name);
      this.rw("value", val);
      this.rw("notifys_list", []);
      this.rw("is_import_able", true);
      this.rw("has_regexp_name", _.isRegExp(name));
      this.rw("belongs_to", "no-one");
    }

    Var.prototype.is_named = function(n) {
      if (this.name() === n) {
        return true;
      }
      if (!this.has_regexp_name()) {
        return false;
      }
      return this.name().test(n);
    };

    Var.prototype.notify_to = function() {
      var action, key, target, v, value;
      switch (arguments.length) {
        case 1:
        case 2:
        case 3:
        case 4:
          break;
        default:
          throw new Error("Unknown arguments: " + ((function() {
            var _i, _len, _results;
            _results = [];
            for (_i = 0, _len = arguments.length; _i < _len; _i++) {
              v = arguments[_i];
              _results.push(v);
            }
            return _results;
          }).apply(this, arguments)));
      }
      target = arguments[0];
      action = arguments[1];
      key = arguments[2];
      value = arguments[3];
      return this.notifys_list.push([target, action, key, value]);
    };

    return Var;

  })();

  module.exports = Var;

}).call(this);
