// Generated by CoffeeScript 1.3.3
(function() {
  var Var, rw, _,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  rw = require("rw_ize");

  _ = require("underscore");

  Var = (function() {

    rw.ize(Var);

    Var.read_able("name", "value");

    Var.read_write_able("is_local_only");

    function Var(name, val) {
      this.is_named = __bind(this.is_named, this);
      this.rw("name", name);
      this.rw("value", val);
      this.rw("is_local_only", true);
    }

    Var.prototype.has_regexp_name = function() {
      return _.isRegExp(this.name());
    };

    Var.prototype.is_a_var = function() {
      return true;
    };

    Var.prototype.is_user_defined = function() {
      var _base;
      return (!(typeof (_base = this.value()).is_a_procedure === "function" ? _base.is_a_procedure() : void 0)) && (!(typeof this.has_regexp_name === "function" ? this.has_regexp_name() : void 0)) && this.name() !== 'List';
    };

    Var.prototype.is_named = function(n) {
      if (this.name() === n) {
        return true;
      }
      if (!this.has_regexp_name()) {
        return false;
      }
      return this.name().test(n);
    };

    return Var;

  })();

  module.exports = Var;

}).call(this);
