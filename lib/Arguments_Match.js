// Generated by CoffeeScript 1.3.3
(function() {
  var Arguments_Match, rw;

  rw = require("rw_ize");

  Arguments_Match = (function() {

    rw.ize(Arguments_Match);

    Arguments_Match.read_able("list", "env", "line", "code", "line_arr", "slice_desc", "args");

    Arguments_Match.read_write_able_bool("is_a_match");

    function Arguments_Match(list, env, line, code) {
      var combo, desc_slice, final_line_arr, finders, i, perms, v, _i, _len;
      this.rw_data().list = list;
      this.rw_data().env = env;
      this.rw_data().line = line;
      this.rw_data().code = code;
      this.rw_data().args = [];
      perms = Argument_List.permutate(env, line, code);
      finders = (function() {
        var _i, _len, _ref, _results;
        _ref = this.list();
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          v = _ref[_i];
          _results.push(v.is_a_match_with);
        }
        return _results;
      }).call(this);
      final_line_arr = null;
      desc_slice = null;
      for (i = _i = 0, _len = perms.length; _i < _len; i = ++_i) {
        combo = perms[i];
        desc_slice = surgeon(combo).describe_slice(finders);
        if (desc_slice) {
          final_line_arr = combo;
          break;
        }
      }
      if (!final_line_arr) {
        return null;
      }
      this.rw_data().is_a_match = true;
      this.rw_data().line_arr = final_line_arr;
      this.rw_data().slice_desc = desc_slice;
      this.rw_data().args = Argument_List.extract_args(match);
    }

    return Arguments_Match;

  })();

  module.exports = Arguments_Match;

}).call(this);
