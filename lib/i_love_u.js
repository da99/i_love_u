// Generated by CoffeeScript 1.3.3
(function() {
  var Arguments_Match, Base_Data, Base_Procs, LOOP_LIMIT, Line, Procedure, Var, Var_List, XRegExp, arr_surgeon, cloneextend, englishy, funcy_perm, humane_list, i_love_u, rw, string_da99, _,
    __slice = [].slice;

  englishy = require('englishy');

  string_da99 = require('string_da99');

  funcy_perm = require('funcy_perm');

  arr_surgeon = require('array_surgeon');

  _ = require('underscore');

  cloneextend = require("cloneextend");

  rw = require('rw_ize');

  humane_list = require('humane_list');

  XRegExp = require('xregexp').XRegExp;

  Line = require('i_love_u/lib/Line');

  Procedure = require("i_love_u/lib/Procedure");

  Base_Procs = require("i_love_u/lib/Base_Procs");

  Base_Data = require("i_love_u/lib/Base_Data");

  Arguments_Match = require("i_love_u/lib/Arguments_Match");

  Var_List = require("i_love_u/lib/Var_List");

  LOOP_LIMIT = 10123;

  if (!RegExp.captures) {
    RegExp.captures = function(r, str) {
      var match, pos, v, vals, _i, _len;
      r.lastIndex = 0;
      match = null;
      vals = [];
      pos = 0;
      while ((match = XRegExp.exec(str, r, pos, 'sticky'))) {
        pos = match.index + match[0].length;
        match.shift();
        for (_i = 0, _len = match.length; _i < _len; _i++) {
          v = match[_i];
          vals.push(v);
        }
      }
      if (vals.length === 0) {
        return null;
      }
      return vals;
    };
  }

  if (!RegExp.first_capture) {
    RegExp.first_capture = function(r, str) {
      var match, vals;
      r.lastIndex = 0;
      match = null;
      vals = null;
      return r.exec(str);
    };
  }

  exports.Var = Var = (function() {

    rw.ize(Var);

    Var.read_able("name", "inherits_from");

    Var.read_write_able("value");

    Var.read_able_bool("is_a_var");

    function Var(n, val) {
      this.rw('name', n);
      this.rw("value", val);
      this.rw("inherits_from", []);
      this.rw("is_a_var", true);
    }

    return Var;

  })();

  exports.i_love_u = i_love_u = (function() {

    i_love_u.No_Match = "no_match";

    i_love_u.inits = function() {
      var v, _i, _len, _ref;
      if ((_ref = this._inits_) == null) {
        this._inits_ = [];
      }
      if (arguments.length !== 0) {
        for (_i = 0, _len = arguments.length; _i < _len; _i++) {
          v = arguments[_i];
          this._inits_.push(v);
        }
        this._inits_ = _.unique(this._inits_);
      }
      return this._inits_;
    };

    rw.ize(i_love_u);

    i_love_u.read_able("outside_scope", 'vars', 'scope', 'loop_total');

    i_love_u.read_write_able("address");

    i_love_u.read_able('code', 'original_code', 'eval_ed');

    function i_love_u(str, env) {
      var init, _i, _len, _ref;
      if (!_.isString(str)) {
        str = str.text();
      }
      this.rw("original_code", str);
      this.rw("code", str.standardize());
      this.rw("eval_ed", []);
      this.rw('scope', []);
      this.rw("loop_total", 0);
      this._vars_ = new Var_List(this);
      if (env) {
        this.rw('outside_scope', env);
      } else {
        this.rw('outside_scope', "none");
        _ref = this.constructor.inits();
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          init = _ref[_i];
          init(this);
        }
      }
    }

    i_love_u.prototype.is_top_most_scope = function() {
      return this.outside_scope() === 'none';
    };

    i_love_u.prototype.record_loop = function(text) {
      this.loop_total(this.loop_total() + 1);
      if (this.loop_total() > LOOP_LIMIT) {
        throw new Error("Loop limit exceeded " + LOOP_LIMIT + " using: " + text + ".");
      }
      return this.loop_total();
    };

    i_love_u.prototype.run_tokens = function() {
      var args, is_any_match, is_full_match, line, match, me, partial_match, proc, results, _i, _len, _ref;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      line = (function(func, args, ctor) {
        ctor.prototype = func.prototype;
        var child = new ctor, result = func.apply(child, args), t = typeof result;
        return t == "object" || t == "function" ? result || child : child;
      })(Line, args, function(){});
      is_full_match = false;
      partial_match = false;
      me = this;
      while (true) {
        is_any_match = false;
        _ref = this.procs();
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          proc = _ref[_i];
          while (true) {
            match = new Arguments_Match(this, line, proc);
            if (!match.is_a_match()) {
              break;
            }
            partial_match = is_any_match = true;
            if (match.is_full_match()) {
              is_full_match = true;
              break;
            }
          }
          if (is_full_match) {
            break;
          }
        }
        if (is_full_match) {
          break;
        }
        if (!is_any_match) {
          break;
        }
      }
      return results = {
        is_match: partial_match,
        is_full_match: is_full_match,
        compiled: line.pair()
      };
    };

    i_love_u.prototype.run = function() {
      var end, i, line, line_and_block, lines, results, _i, _len;
      lines = (new englishy.Englishy(this.code())).to_tokens();
      for (i = _i = 0, _len = lines.length; _i < _len; i = ++_i) {
        line_and_block = lines[i];
        results = this.run_tokens(line_and_block[0], line_and_block[1]);
        if (!results.is_any_match || !results.is_full_match) {
          end = line_and_block[1] ? ":" : ".";
          line = "" + (englishy.Stringy.to_strings(line_and_block[0]).join(" ")) + end;
          if (!results.is_match) {
            throw new Error("No match for: " + line);
          }
          if (!results.is_full_match) {
            throw new Error("No full match: " + line + " => " + (results.compiled[0].join(" ")) + end);
          }
        }
        this.eval_ed().push(results.compiled);
      }
      return true;
    };

    return i_love_u;

  })();

  i_love_u.inits(Base_Procs.i_love_u, Base_Data.i_love_u);

}).call(this);
